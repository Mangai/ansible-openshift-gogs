---
## Gogs Git Server Install

# create project
- name: check if gogs project {{ project_name }} exists
  shell: "{{ openshift_cli }} get project {{ project_name }}"
  register: gogs_project_result
  ignore_errors: true
  changed_when: false

- name: create gogs project {{ project_name }}
  shell: "{{ openshift_cli }} new-project {{ project_name }} --display-name='{{ project_display_name }}' --description='{{ project_desc }}'"
  when: gogs_project_result|failed

- name: assign user {{ project_admin }} as project admin in {{ project_name }}
  shell: "oc adm policy add-role-to-user admin {{ project_admin }} -n {{ project_name }}"
  ignore_errors: true
  when: >
    gogs_project_result|failed and
    project_admin is defined and
    project_admin is not none and
    project_admin|trim() != ""

- name: annotate gogs project {{ project_name }}
  shell: "oc annotate --overwrite namespace {{ project_name }} {{ project_annotations }}"
  ignore_errors: true
  when: >
    gogs_project_result|failed and
    project_annotations is defined and
    project_annotations is not none and
    project_annotations|trim() != ""

# install gogs
- name: check if gogs exists
  shell: "{{ openshift_cli }} get service gogs -n {{ project_name }}"
  register: install_gogs
  ignore_errors: true
  changed_when: false

- name: remove existing gogs if clean deploy requested
  shell: |
    {{ openshift_cli }} delete all,cm,pvc -l app=gogs -n {{ project_name }}
    {{ openshift_cli }} delete sa gogs -n {{ project_name }}
  when: 
    - install_gogs|succeeded 
    - clean_deploy|bool

- import_tasks: deploy.yml
  when: clean_deploy|bool or install_gogs|failed

# create gogs users
- import_tasks: create_users.yml
